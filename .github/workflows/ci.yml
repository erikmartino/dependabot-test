name: ci

on:
  push:
    branches:
      - 'main'
    tags:
      - 'v*'
  pull_request:
    branches:
      - 'main'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      - 
        name: Authenticate with GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        run: echo "build_time=$(date +%Y%m%d%H%M)" >>$GITHUB_ENV
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr,prefix=pr,suffix=.${{ env.build_time }}
            type=semver,pattern={{version}},event=tag
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
      - 
        name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
        if: github.event_name == 'push' && github.ref == 'refs/heads/main' # Added condition
      - 
        name: conventional changelog action
        id: changelog
        # https://github.com/TriPSs/conventional-changelog-action
        uses: TriPSs/conventional-changelog-action@latest
        with:
          # you can also create separate token to trace action
          github-token: "${{ secrets.GITHUB_TOKEN }}"
        if: startsWith(github.ref, 'refs/tags/')
      - 
        name: create release
        # https://github.com/actions/create-release
        uses: softprops/action-gh-release@v1
        if: ${{steps.changelog.outputs.skipped == 'false'}}
        env:
          # This token is provided by Actions, you do not need to create your own token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
            tag_name: ${{ steps.changelog.outputs.tag }}
            name: ${{ steps.changelog.outputs.tag }}
            body: ${{steps.changelog.outputs.clean_changelog}}
            draft: false
            prerelease: false


